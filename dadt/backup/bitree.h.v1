/*****************************************************************************/
/**
 * @file        bitree.h
 * @brief       binary tree
 * @version     1.0
 * @author      dercury
 * @date        2012-02-04
 */
/*****************************************************************************/
#ifndef BITREE_H
#define BITREE_H

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

/*****************************************************************************/
typedef enum tagBiTreeTraversal
{
    BITREE_PREORDER_TRAVERSAL,
    BITREE_INORDER_TRAVERSAL,
    BITREE_POSTORDER_TRAVERSAL,
    BITREE_LEVELORDER_TRAVERSAL,
} eBiTreeTraversalMethod;

/*****************************************************************************/
/**
 * @struct      BTree
 * @brief       structure for binary trees
 */
/*****************************************************************************/
struct tagBiTree;
typedef struct tagBiTree BiTree;

/*****************************************************************************/
typedef struct tagBiTreeNodePos
{
    SizeType    row;
    SizeType    col;
} BiTreeNodePos;

/*****************************************************************************/
/**
 * @func        FuncRet btree_init(BTree *tree, void (*destroy)(void *data));
 * @brief       initializes binary tree
 * @param[in]   tree        pointer of binary tree
 * @param[in]   destroy     user defined function used to destroy the tree
 * @return      FuncRet     see dtype.h enum @FuncRet
 * @complexity  O(1)
 */
/*****************************************************************************/
extern BiTree * bitree_create(FreeFunc data_free, CmpFunc data_cmp);

/*****************************************************************************/
/**
 * @func        FuncRet btree_destroy(BTree *tree);
 * @brief       destroys binary tree
 * @param[in]   tree        pointer of binary tree
 * @return      FuncRet     see dtype.h enum @FuncRet
 * @complexity  O(n)
 */
/*****************************************************************************/
extern eFuncRtn bitree_destroy(BiTree **thiz);

extern SizeType bitree_get_size(const BiTree *thiz);
extern SizeType bitree_get_depth(const BiTree *thiz);

extern void * bitree_get_max(const BiTree *thiz);
extern void * bitree_get_min(const BiTree *thiz);

extern FreeFunc bitree_get_free_func(const BiTree *thiz);
extern void bitree_set_free_func(BiTree *thiz, FreeFunc data_free);
extern CmpFunc bitree_get_cmp_func(const BiTree *thiz);
extern void bitree_set_cmp_func(BiTree *thiz, CmpFunc data_cmp);

extern eFuncRtn bitree_preorder_traversal(const BiTree *thiz, VisitFunc visit, void *context);
extern eFuncRtn bitree_inorder_traversal(const BiTree *thiz, VisitFunc visit, void *context);
extern eFuncRtn bitree_postorder_traversal(const BiTree *thiz, VisitFunc visit, void *context);
extern eFuncRtn bitree_levelorder_traversal(const BiTree *thiz, VisitFunc visit, void *context);

extern eFuncRtn bitree_get_all_data(const BiTree *thiz, DList *list, eBiTreeTraversalMethod method);
extern eFuncRtn bitree_get_pos_by_data(const BiTree *thiz, const void *data, BiTreeNodePos *pos);
extern eFuncRtn bitree_get_data_by_pos(const BiTree *thiz, BiTreeNodePos *pos, void **data);
extern eFuncRtn bitree_set_data_by_pos(const BiTree *thiz, BiTreeNodePos *pos, const void *data);

extern eFuncRtn bitree_print(BiTree *thiz, PrintFunc print);
extern eFuncRtn bitree_print_figure(const BiTree *thiz, ToStringFunc to_string);
/*****************************************************************************/

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* BITREE_H */

